name: Test Backend

on:
  push:
    branches:
      - main
  pull_request_target:
    types:
      - opened
      - synchronize

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3
      - name: Setup Doppler
        run: doppler setup --silent --project quick-forge-ai --config stg
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

      - run: doppler run -- docker compose down -v --remove-orphans
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - run: doppler run -- docker compose up -d db mailcatcher
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - name: Migrate DB
        run: doppler run -- uv run bash scripts/prestart.sh
        working-directory: backend
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - name: Run tests
        run: doppler run -- uv run bash scripts/tests-start.sh "Coverage for ${{ github.sha }}"
        working-directory: backend
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - run: doppler run -- docker compose down -v --remove-orphans
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: backend/htmlcov
          include-hidden-files: true
