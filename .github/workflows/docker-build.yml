name: Docker Build and Push

on:
  schedule:
    - cron: '30 2 * * *'
  push:
    branches:
      - main
      - release-*
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  workflow_dispatch:

jobs:
  build-voiceflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to AliYun Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIREGISTRY_USERNAME }}
          password: ${{ secrets.ALIREGISTRY_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker metadata
        id: metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            docker.io/telepace/voiceflow
            registry.cn-hangzhou.aliyuncs.com/telepace/voiceflow
            ghcr.io/telepace/voiceflow
          tags: |
            type=ref,event=tag
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern=v{{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image for voiceflow
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/images/voiceflow/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            VERSION=${{ steps.metadata.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: docker.io/telepace/voiceflow:${{ steps.metadata.outputs.version }}
          format: 'github'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          cache: 'true'

      - name: Clean up Docker
        if: always()
        run: docker system prune -f